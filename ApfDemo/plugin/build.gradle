apply plugin: 'com.android.application'
//apply from: "https://raw.githubusercontent.com/limpoxe/Android-Plugin-Framework/master/FairyPlugin/plugin.gradle"

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.1"
//    compileSdkVersion 23
//    buildToolsVersion '26.0.2'
//    compileSdkVersion 28
//    buildToolsVersion "28.0.1"

    defaultConfig {
        applicationId "apf.plugin"

        minSdkVersion 14
        targetSdkVersion 27
//        minSdkVersion 9
//        targetSdkVersion 23
//        minSdkVersion 14
//        targetSdkVersion 28

        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    android.applicationVariants.all{variant ->
        variant.each {
            variant.buildConfigField "String", "packagingTime", "\"${getPackagingTime()}\""
        }
    }
}

dependencies {
//    baselinePatch files(project(':host').getBuildDir().absolutePath + '/distributions/host.bar')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.google.code.gson:gson:2.5'

    compile 'tools.android:utils:1.0.0'
    compile 'tools.android:interface:1.0.0'
    implementation 'tools.android:h5browser:0.1.1'

//    compile 'com.android.support:appcompat-v7:27.0.0'
//    compile 'com.android.support:appcompat-v7:23.2.1'
//    compile 'com.android.support:appcompat-v7:28.0.0-alpha3'
}

afterEvaluate {
    tasks.getByName("packageDebug").doLast {
        copy {
            println "复制插件" + apkPathList.get(0).absolutePath + "到宿主assets目录"
            from apkPathList.get(0).getParent()
            include project.name + '-debug.apk'
            into(project(':host').getProjectDir().absolutePath + '/src/main/assets/')
        }
    }
}
def getPackagingTime() {
    return new Date().format("yyyyMMddHHmmssSSS", TimeZone.getTimeZone("GMT+0000"))
}
